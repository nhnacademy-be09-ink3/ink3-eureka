name: CI

on:
  push:
    branches:
      - dev

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven (skip tests)
        run: mvn clean install -DskipTests=true -B

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Extract version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Package application
        run: mvn package -DskipTests=true -B

      - name: Run Eureka in background
        run: |
          nohup java -jar target/ink3-eureka-${{ steps.extract_version.outputs.version }}.jar --server.port=10266 > app.log 2>&1 &
          echo $! > app.pid

      - name: Wait for Eureka to start
        run: sleep 15

      - name: Health check
        run: curl -u admin:1234 --fail http://localhost:10266/actuator/health

      - name: Stop Eureka
        run: kill $(cat app.pid)

      - name: Run unit tests
        run: mvn test -B

      - name: Print logs on failure
        if: failure()
        run: cat app.log

  deploy:
    name: Deploy to Linux Server
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Extract version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build JAR
        run: mvn package -DskipTests=true -B

      - name: Verify JAR file
        run: ls -lh target/ink3-eureka-${{ steps.extract_version.outputs.version }}.jar

      - name: Copy JAR to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_IP }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          source: "target/ink3-eureka-${{ steps.extract_version.outputs.version }}.jar"
          target: "~/ink3-server-dev/eureka-dev/"

      - name: Run deploy.sh on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/ink3-server-dev/eureka-dev
            chmod +x deploy.sh
            nohup ./deploy.sh "${{ steps.extract_version.outputs.version }}" > deploy.log 2>&1 &
            exit 0
